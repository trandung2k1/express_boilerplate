const express = require('express');
const dotenv = require('dotenv');
dotenv.config();
const cors = require('cors');
const morgan = require('morgan');
const compression = require('compression');
const helmet = require('helmet');
const cookieParser = require('cookie-parser');
const methodOverride = require('method-override');
const colors = require('colors');
const { notFound, errorHandler } = require('./utils/errorHandler');
const { compressionOptions, corsOptions } = require('./utils/configs');
const viewEngine = require('./configs/viewEngine');
const connectDB = require('./configs/db');
const socket = require('./sockets');
const limitRequest = require('./middlewares/limitRequest');
const routes = require('./routes');
const port = process.env.PORT || 4000;
const app = express();
app.use(helmet());
app.use(express.urlencoded({ extended: false, limit: '50mb' }));
app.use(express.json({ limit: '50mb' }));
app.use(compression(compressionOptions));
app.use(limitRequest);
app.use(cors(corsOptions));
app.use(morgan('combined'));
app.use(methodOverride('_method'));
app.use(cookieParser());
viewEngine(app);
routes(app);
app.use(notFound);
app.use(errorHandler);
const server = app.listen(port, async () => {
    await connectDB();
    console.log(colors.green(`Server listening on http://localhost:${port}`));
});
socket(server);
